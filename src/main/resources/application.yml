server:
  port: 8989

spring:
  datasource:
    url: ENC(qNWiyfiLVM7gcG+i32abH5YsuNvYR1maFJpPBmoFE/z4k0P/0BN9oFOQTaReDfXl)
    username: ENC(ZORAVZXTa6RXUoxnM3DZOQ==)
    password: ENC(0L+viCCtXEjEyDjVFl7VKgdAokMPtz2f)
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    properties:
      hibernate:
        hibernate:
        "[format_sql]": true            #SQL 보기 좋게 출력
        "[user_sql_comments]": true     #SQL 생성시 주석 포함
        "[highlight_sql]": true         #SQL 색깔
        "[hbm2ddl.auto]": update
    open-in-view: true
    show-sql: true
  data:
    mongodb:
      authentication-database: admin
      host: ENC(vY3XEtGX/fIohGirRLc2f/i6Jrt2l0dq)
      port: 27017
      username: ENC(XxohAuNTGxgApsh6C7Vl3Q==)
      password: ENC(p4cBV9/BsVQujt6AbMmkNd0yNECQuZaV)
      database: ENC(Uky7ACnik82b82glWaJCjg==)
    redis:
      host: ENC(UhY6yuvmWwYC5ywR5mdXmRzw3ygSFrmY)
      port: 6379
      lettuce:
        pool:
          max-active: 10
          max-idle: 10
          min-idle: 2
      password: ENC(IH1K1vglnbxSV99k1f1MBS1KkywUyGCT)
  cache:
    type: redis
  security:
    user:
      name: ENC(ZsL0K7XP3PGgpkAj0i2XBQ==)
      password: ENC(x6a+l1WKbqSmSA35Cvt2GBAsnsaNGtbf)

  kafka:
    bootstrap-servers: 59.3.28.12:9092,59.3.28.12:9093,59.3.28.12:9094
    producer:
      # 데이터를 보낼 때, key/value를 직렬화
      # JSON 데이터를 보낼 것이라면 JsonDeserializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      message:
        topic:
          name: fastapi_check
      # 식별 가능한 Consumer Group Id
      group-id: group-id-sam9mo
      # Kafka 서버에 초기 offset이 없거나, 서버에 현재 offset이 더 이상 존재하지 않을 경우 수행할 작업을 설정
      # latest: 가장 최근에 생산된 메시지로 offeset reset
      # earliest: 가장 오래된 메시지로 offeset reset
      # none: offset 정보가 없으면 Exception 발생
      auto-offset-reset: earliest
      # 데이터를 받아올 때, key/value를 역직렬화
      # JSON 데이터를 받아올 것이라면 JsonDeserializer
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
jwt:
  header: "Authorization"
  accessPrefix: "Bearer "
  secret: ENC(HI+M8Q72uAy/j8Uieo71W5GfWRiBbydHxe81KM7trRxi4m0RM4iEGwv9Yy1mi86giVE3dJJmkZbj66+BUF8ZiwGB4HgjXnQkh5aUZzLdzzmUjxlFIw4oyo1iM0HxMC/sVTclr3TvEMBtQdwB4CB/P7X3DyIvG8jnf7gePWIkZu+tZ7DfRytZUA==)
  accessTokenExpirationTime: 60
  refreshTokenExpirationTime: 86400

springdoc:
  default-consumes-media-type: application/json;charset=UTF-8
  default-produces-media-type: application/json;charset=UTF-8
  paths-to-match: /**
  swagger-ui:
    path: /
    display-request-duration: true
    groups-order: desc
    operations-sorter: alpha
    disable-swagger-default-url: true
  api-docs:
    groups:
      enabled: true
JASYPT_PASSWORD : thswldud